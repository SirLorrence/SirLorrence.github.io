<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- 0.126.1</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project Alpha</title>
      <link>http://localhost:1313/projects/testpost-copy-copy-3/</link>
      <pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/testpost-copy-copy-3/</guid>
      <description>HHH In this project, I developed my own pseudo-environment query system. Initially, I was working on a top-down roguelike game. I wanted to improve how enemies move toward the player instead of just setting their move position to the player&amp;rsquo;s position. This process taught me a new approach to programming and thinking about AI movement.
I came across an article called &amp;ldquo;Implementing Robust AI for SecondHand: Enemy Positioning&amp;rdquo; and then worked off its fundamental ideal.</description>
    </item>
    <item>
      <title>Project Alpha</title>
      <link>http://localhost:1313/projects/testpost-copy-copy-5/</link>
      <pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/testpost-copy-copy-5/</guid>
      <description>HHH In this project, I developed my own pseudo-environment query system. Initially, I was working on a top-down roguelike game. I wanted to improve how enemies move toward the player instead of just setting their move position to the player&amp;rsquo;s position. This process taught me a new approach to programming and thinking about AI movement.
I came across an article called &amp;ldquo;Implementing Robust AI for SecondHand: Enemy Positioning&amp;rdquo; and then worked off its fundamental ideal.</description>
    </item>
    <item>
      <title>Project Alpha</title>
      <link>http://localhost:1313/projects/testpost-copy-copy/</link>
      <pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/testpost-copy-copy/</guid>
      <description>HHH In this project, I developed my own pseudo-environment query system. Initially, I was working on a top-down roguelike game. I wanted to improve how enemies move toward the player instead of just setting their move position to the player&amp;rsquo;s position. This process taught me a new approach to programming and thinking about AI movement.
I came across an article called &amp;ldquo;Implementing Robust AI for SecondHand: Enemy Positioning&amp;rdquo; and then worked off its fundamental ideal.</description>
    </item>
    <item>
      <title>Project Alpha</title>
      <link>http://localhost:1313/projects/testpost-copy/</link>
      <pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/testpost-copy/</guid>
      <description>HHH In this project, I developed my own pseudo-environment query system. Initially, I was working on a top-down roguelike game. I wanted to improve how enemies move toward the player instead of just setting their move position to the player&amp;rsquo;s position. This process taught me a new approach to programming and thinking about AI movement.
I came across an article called &amp;ldquo;Implementing Robust AI for SecondHand: Enemy Positioning&amp;rdquo; and then worked off its fundamental ideal.</description>
    </item>
  </channel>
</rss>
